# Pour the PORT - Environment Variables Template
# Copy this file to .env and fill in your actual values

# =============================================================================
# CLOUDINARY CONFIGURATION (REQUIRED)
# =============================================================================
# Get these values from your Cloudinary dashboard at https://cloudinary.com/console
# This is required for image delivery and optimization

# Your Cloudinary Cloud Name (required for all image functionality)
# Used by the custom CloudinaryImage component and utility functions
# Example: southland-organics
PUBLIC_CLOUDINARY_CLOUD_NAME=your-cloudinary-cloud-name

# =============================================================================
# CLOUDINARY COMPONENT USAGE
# =============================================================================
# The custom CloudinaryImage component automatically generates optimized URLs
# with the following features:
# - Responsive images with srcset for different screen sizes
# - Automatic format selection (WebP, AVIF) based on browser support
# - Quality optimization (auto, auto:good, auto:best, auto:low)
# - Lazy loading with blur placeholders
# - Preset configurations for common use cases (hero, product, logo, etc.)
# - No conflicts with Astro's built-in Image component

# =============================================================================
# OPTIONAL IMAGE IDS FOR CUSTOMIZATION
# =============================================================================
# These allow you to customize specific images used throughout the site
# If not provided, default placeholder images will be used

# Background image for the Pain Points section (septic overflow scene)
# Should be a dramatic image showing septic system problems
PUBLIC_SEPTIC_OVERFLOW_ID=your-septic-disaster-image-id

# Main hero background image (environmental/nature scene)
# Should convey natural, clean environment themes
PUBLIC_HERO_BACKGROUND_ID=your-hero-background-image-id

# Trust logos and certification images
PUBLIC_TRUST_LOGO_USDA_ID=your-usda-logo-image-id
PUBLIC_TRUST_LOGO_NATIONAL_PARKS_ID=your-national-parks-logo-id
PUBLIC_TRUST_LOGO_FOREST_SERVICE_ID=your-forest-service-logo-id
PUBLIC_TRUST_LOGO_UNIVERSITY_ID=your-university-logo-id

# Product images
PUBLIC_PRODUCT_PACKET_ID=your-product-packet-image-id
PUBLIC_PRODUCT_LIFESTYLE_ID=your-lifestyle-shot-image-id

# How It Works instruction images
PUBLIC_INSTRUCTION_STEP1_ID=your-step1-pour-image-id
PUBLIC_INSTRUCTION_STEP2_ID=your-step2-flush-image-id
PUBLIC_INSTRUCTION_STEP3_ID=your-step3-protect-image-id

# Social sharing images
PUBLIC_OG_IMAGE_ID=your-open-graph-image-id
PUBLIC_TWITTER_CARD_ID=your-twitter-card-image-id

# =============================================================================
# RECOMMENDED CLOUDINARY FOLDER STRUCTURE
# =============================================================================
# Organize your images in Cloudinary using this folder structure:
#
# pour-the-port/
# ├── hero/
# │   ├── background-main
# │   └── background-alt
# ├── products/
# │   ├── packet-main
# │   ├── packet-lifestyle
# │   └── before-after
# ├── logos/
# │   ├── usda-certified
# │   ├── national-parks
# │   ├── forest-service
# │   └── university-georgia
# ├── instructions/
# │   ├── step-1-pour
# │   ├── step-2-flush
# │   └── step-3-protect
# ├── backgrounds/
# │   ├── septic-overflow
# │   ├── pristine-environment
# │   └── happy-family
# └── social/
#     ├── og-image
#     └── twitter-card
#
# Then reference images like: pour-the-port/hero/background-main

# =============================================================================
# DEVELOPMENT vs PRODUCTION
# =============================================================================
# For development, you can use a test/demo Cloudinary account
# For production, use your dedicated account with optimized images

# Development example:
# PUBLIC_CLOUDINARY_CLOUD_NAME=demo

# Production example:
# PUBLIC_CLOUDINARY_CLOUD_NAME=southland-organics

# =============================================================================
# SETUP INSTRUCTIONS
# =============================================================================
# 1. Create a Cloudinary account at https://cloudinary.com
# 2. Copy your Cloud Name from the dashboard
# 3. Upload your images to Cloudinary (see folder structure above)
# 4. Copy this file to .env: cp .env.example .env
# 5. Replace "your-cloudinary-cloud-name" with your actual cloud name
# 6. (Optional) Replace image IDs with your specific Cloudinary public IDs
# 7. Restart your development server: npm run dev

# =============================================================================
# SECURITY NOTES
# =============================================================================
# - Never commit your .env file to git (it's in .gitignore)
# - Only PUBLIC_ prefixed variables are exposed to the client
# - Cloudinary cloud names are not secret but keep your API keys private
# - For production, set these in your Vercel dashboard environment variables

# =============================================================================
# SHOPIFY HEADLESS CONFIGURATION (REQUIRED FOR E-COMMERCE)
# =============================================================================
# Get these values from your Shopify store admin at:
# Settings > Apps and sales channels > Develop apps > Create app
# Configure Storefront API access with these scopes:
# - unauthenticated_read_product_listings
# - unauthenticated_read_product_inventory  
# - unauthenticated_read_product_pickup_locations
# - unauthenticated_checkout_create
# - unauthenticated_checkout_read

# Your Shopify Store Domain (required)
# Example: your-store.myshopify.com (do not include https://)
PUBLIC_SHOPIFY_STORE_DOMAIN=your-store.myshopify.com

# Shopify Storefront API Access Token (required)
# This is the public token safe to use in client-side code
# Example: shpat_01234567890abcdef
PUBLIC_SHOPIFY_STOREFRONT_ACCESS_TOKEN=your-storefront-access-token

# Product Handle or ID for Pour the PORT 3-Pack
# This is the product identifier used in Shopify URLs
# Example: pour-the-port-3-pack-annual-supply
PUBLIC_SHOPIFY_PRODUCT_HANDLE=pour-the-port-3-pack

# Shopify Admin API (PRIVATE - server-side only, never expose in browser)
# Used for: order processing, inventory management, customer data, webhooks
# Get this from: Shopify Admin > Apps > [Your App] > API credentials
# Format: shpat_[32-character-string] or shpca_[64-character-string]
SHOPIFY_ADMIN_ACCESS_TOKEN=your-admin-api-token-here
SHOPIFY_ADMIN_API_VERSION=2024-10

# =============================================================================
# SHOPIFY SETUP INSTRUCTIONS
# =============================================================================
# 1. In Shopify Admin, go to Settings > Apps and sales channels
# 2. Click "Develop apps" then "Create an app"
# 3. Configure Storefront API access with required scopes (listed above)
# 4. Generate Storefront access token
# 5. Copy your store domain and access token to .env
# 6. Create your Pour the PORT product in Shopify admin
# 7. Note the product handle (slug in URL) for configuration
# 8. Test checkout flow in development environment

# =============================================================================
# TESTING YOUR SETUP
# =============================================================================
# After configuring, test your setup:
# 1. Run: npm run dev
# 2. Open: http://localhost:4321
# 3. Check that images load properly
# 4. Look for any broken image placeholders
# 5. Test responsive behavior on different screen sizes
# 6. Run: npm run build (should complete without errors)

# =============================================================================
# GOOGLE ANALYTICS 4 CONFIGURATION (HIGHLY RECOMMENDED)
# =============================================================================
# Google Analytics 4 provides essential insights into user behavior, 
# conversion tracking, and ROI analysis for your septic treatment business

# Google Analytics 4 Measurement ID (required for analytics)
# Get from: Google Analytics > Admin > Property > Data Streams > Web
# Format: G-XXXXXXXXXX
# This tracks: page views, button clicks, conversions, user behavior
PUBLIC_GA_MEASUREMENT_ID=your-ga4-measurement-id-here

# Debug Mode for Development (optional)
# Set to 'true' to enable GA4 tracking in development environment
# Leave blank or 'false' for production
# Useful for testing analytics implementation
PUBLIC_GA_DEBUG=false

# =============================================================================
# GOOGLE ANALYTICS SETUP INSTRUCTIONS
# =============================================================================
# 1. Go to https://analytics.google.com/
# 2. Create new GA4 property for your domain
# 3. Set up Web Data Stream for your website
# 4. Copy the Measurement ID (G-XXXXXXXXXX)
# 5. Add to .env file and restart development server
# 6. Verify tracking in GA4 Real-time reports

# Analytics will track:
# - Subscribe Now button clicks with conversion values
# - User engagement (scroll depth, time on page)
# - Ecommerce events (begin_checkout, purchase intent)
# - Video interactions (Wistia demo plays/completions)
# - Contact form submissions and phone/email clicks
# - Custom septic treatment industry metrics

# For more detailed setup instructions, see:
# - CLOUDINARY_SETUP.md
# - DEPLOYMENT.md
# - README.md