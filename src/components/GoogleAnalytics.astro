---
export interface Props {
  measurementId?: string;
}

const { measurementId = import.meta.env.PUBLIC_GA_MEASUREMENT_ID } = Astro.props;

// Only load analytics in production or when explicitly enabled
const isProduction = import.meta.env.PROD;
const isDevelopment = import.meta.env.DEV;
const enableAnalytics = measurementId && measurementId !== 'your-ga4-measurement-id-here' && (isProduction || import.meta.env.PUBLIC_GA_DEBUG === 'true');
---

{enableAnalytics ? (
  <>
    <!-- Google tag (gtag.js) - Optimized Loading -->
    <script is:inline define:vars={{ measurementId }}>
      // Load Google Analytics after page interaction or after 3 seconds
      let gaLoaded = false;
      function loadGA() {
        if (gaLoaded) return;
        gaLoaded = true;
        
        const script = document.createElement('script');
        script.async = true;
        script.src = `https://www.googletagmanager.com/gtag/js?id=${measurementId}`;
        document.head.appendChild(script);
        
        window.dataLayer = window.dataLayer || [];
        function gtag(){dataLayer.push(arguments);}
        window.gtag = gtag;
        gtag('js', new Date());
        gtag('config', measurementId, {
          send_page_view: true,
          allow_google_signals: true,
          enhanced_conversions: true
        });
        console.log('üìä Google Analytics 4 loaded:', measurementId);
      }
      
      // Load on first interaction
      ['mousedown', 'mousemove', 'keypress', 'scroll', 'touchstart', 'click'].forEach(event => {
        document.addEventListener(event, loadGA, { once: true, passive: true });
      });
      
      // Fallback: load after 3 seconds
      setTimeout(loadGA, 3000);
    </script>
  </>
) : (
  <script is:inline>
    if (window.location.hostname === 'localhost') {
      console.log('üîç Google Analytics: Disabled in development mode');
      console.log('üí° To enable: Set PUBLIC_GA_DEBUG=true in .env');
    }
  </script>
)}